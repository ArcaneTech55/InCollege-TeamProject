IDENTIFICATION DIVISION.
PROGRAM-ID. INCOLLEGE.

ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
       SELECT INPUT-FILE ASSIGN TO "InCollege-Input.txt"
           ORGANIZATION IS LINE SEQUENTIAL.
       SELECT OUTPUT-FILE ASSIGN TO "InCollege-Output.txt"
           ORGANIZATION IS LINE SEQUENTIAL.
       SELECT USER-ACCOUNT-FILE ASSIGN TO "USER-ACCOUNT.DAT"
           ORGANIZATION IS SEQUENTIAL
           FILE STATUS IS WS-USER-FILE-STATUS.
       SELECT USER-PROFILE-FILE ASSIGN TO "USER-PROFILE.DAT"
           ORGANIZATION IS SEQUENTIAL
           FILE STATUS IS WS-PROFILE-FILE-STATUS.

       SELECT TEMP-PROFILE-FILE ASSIGN TO "TEMP-PROFILE.DAT"
           ORGANIZATION IS SEQUENTIAL
           FILE STATUS IS WS-TEMP-PROFILE-FILE-STATUS.

       SELECT CONNECTION-FILE ASSIGN TO "connections.dat"
           ORGANIZATION IS LINE SEQUENTIAL
           FILE STATUS IS WS-CONNECTION-FILE-STATUS.

       SELECT PENDING-REQUEST-FILE ASSIGN TO "pendingRequests.dat"
           ORGANIZATION IS LINE SEQUENTIAL
           FILE STATUS IS WS-PENDING-FILE-STATUS.

DATA DIVISION.
FILE SECTION.
FD INPUT-FILE.
01 INPUT-RECORD PIC X(100).

FD OUTPUT-FILE.
01 OUTPUT-RECORD PIC X(100).

FD USER-ACCOUNT-FILE.
01 USER-ACCOUNT-REC.
       05 USER-NAME     PIC X(100).
       05 USER-PASSWORD PIC X(100).

FD USER-PROFILE-FILE.
01 USER-PROFILE-REC.
       05 UP-USER-NAME   PIC X(100).
       05 UP-FIRST-NAME  PIC X(30).
       05 UP-LAST-NAME   PIC X(30).
       05 UP-UNIVERSITY  PIC X(40).
       05 UP-MAJOR       PIC X(40).
       05 UP-GRAD-YEAR   PIC 9(4).
       05 UP-ABOUT-ME    PIC X(200).
       05 UP-NUM-EXP     PIC 9.
       05 UP-EXPERIENCE-TABLE.
           10 UP-EXPERIENCE-ENTRY OCCURS 3 TIMES.
               15 UP-EXP-TITLE     PIC X(100).
               15 UP-EXP-COMPANY   PIC X(100).
               15 UP-EXP-DATE      PIC X(50).
               15 UP-EXP-DESC      PIC X(100).
       05 UP-NUM-EDU     PIC 9.
       05 UP-EDUCATION-TABLE.
           10 UP-EDUCATION-ENTRY OCCURS 3 TIMES.
               15 UP-EDU-DEGREE    PIC X(100).
               15 UP-EDU-UNI       PIC X(100).
               15 UP-EDU-YEARS     PIC X(50).

FD TEMP-PROFILE-FILE.
01 TEMP-PROFILE-REC       PIC X(6000).

FD CONNECTION-FILE.
01 CONNECTION-REC.
       05 CONNECTION-USER1     PIC X(100).
       05 CONNECTION-USER2     PIC X(100).

FD PENDING-REQUEST-FILE.
01 PENDING-REQUEST-REC.
       05 PEND-SENDING-USER    PIC X(100).
       05 PEND-RECEIVING-USER  PIC X(100).

WORKING-STORAGE SECTION.
01 WS-FLAGS.
       05 WS-END-OF-FILE PIC X VALUE 'N'.
              88 WS-EOF-FLAG      VALUE 'Y'.
              88 WS-NOT-EOF-FLAG  VALUE 'N'.

       05 WS-LOGIN-FLAG PIC X.
              88 WS-LOGIN-SUCCESSFUL VALUE 'Y'.
              88 WS-LOGIN-FAILED     VALUE 'N'.

       05 WS-VALIDATION-FLAG PIC X.
              88 WS-PASSWORD-IS-VALID   VALUE 'Y'.
              88 WS-PASSWORD-IS-INVALID VALUE 'N'.

       05 WS-ACCOUNT-CREATED-FLAG PIC X.
              88 WS-ACCOUNT-CREATED     VALUE 'Y'.
              88 WS-ACCOUNT-NOT-CREATED VALUE 'N'.

       05 WS-EXIT-STATUS PIC X VALUE 'N'.
              88 WS-USER-WANT-TO-EXIT VALUE 'Y'.

       05 WS-USER-FILE-STATUS    PIC XX VALUE "00".
       05 WS-CUR-CHAR            PIC X.

       05 WS-PROFILE-FILE-STATUS PIC XX VALUE "00".
       05 WS-TEMP-PROFILE-FILE-STATUS PIC XX VALUE "00".
       05 WS-FOUND-PROFILE            PIC X VALUE 'N'.
              88 WS-PROFILE-FOUND      VALUE 'Y'.
              88 WS-PROFILE-NOT-FOUND  VALUE 'N'.
       05 WS-INPUT-FIELD               PIC X.
           88 WS-VALID-FIELD           VALUE 'Y'.
           88 WS-INVALID-FIELD         VALUE 'N'.

01 WS-COUNTERS.
       05 WS-USER-ACCOUNT-COUNT PIC 99 VALUE 0.
       05 I                     PIC 99.
       05 J                     PIC 99.

01 WS-USER-ACCOUNT-TABLE.
       05 WS-USER OCCURS 5 TIMES INDEXED BY IDX.
           10 WS-USER-NAME     PIC X(100).
           10 WS-USER-PASSWORD PIC X(100).

01 WS-INPUT-VARIABLES.
       05 WS-INPUT-CHOICE   PIC X(1).
       05 WS-INPUT-USERNAME PIC X(100).
       05 WS-INPUT-PASSWORD PIC X(100).



01 WS-USER-PROFILE-REC.
    05 WS-PROFILE-USERNAME   PIC X(100).
    05 WS-FIRST-NAME         PIC X(30).
    05 WS-LAST-NAME          PIC X(30).
    05 WS-UNIVERSITY         PIC X(40).
    05 WS-MAJOR              PIC X(40).
    05 WS-GRAD-YEAR          PIC 9(4).
    05 WS-ABOUT-ME           PIC X(200).
    05 WS-NUM-EXP            PIC 9.
    05 WS-EXPERIENCE-TABLE.
       10 WS-EXPERIENCE-ENTRY OCCURS 3 TIMES.
          15 WS-EXP-TITLE       PIC X(100).
          15 WS-EXP-COMPANY     PIC X(100).
          15 WS-EXP-DATES       PIC X(50).
          15 WS-EXP-DESCRIPTION PIC X(100).
    05 WS-NUM-EDU            PIC 9.
    05 WS-EDUCATION-TABLE.
       10 WS-EDUCATION-ENTRY OCCURS 3 TIMES.
          15 WS-EDU-DEGREE      PIC X(100).
          15 WS-EDU-UNIVERSITY  PIC X(100).
          15 WS-EDU-YEARS       PIC X(50).

 01 WS-SEARCH-CRITERIA.
    05 WS-SEARCH-FIRST-NAME         PIC X(100) VALUE SPACES.
    05 WS-SEARCH-LAST-NAME          PIC X(100) VALUE SPACES.

01 WS-CONNECTION-FILE-STATUS PIC XX VALUE '00'.
01 WS-PENDING-FILE-STATUS    PIC XX VALUE '00'.

01 WS-CONNECTION-CRITERIA.
       05 WS-FROM-CONNECTION-USERNAME  PIC X(100).
       05 WS-TO-CONNECTION-USERNAME    PIC X(100).

01 WS-CONNECTION-FLAGS.
       05 WS-CONNECTION-EXISTS     PIC X VALUE 'N'.
           88 CONNECTION-FOUND         VALUE 'Y'.
           88 CONNECTION-NOT-FOUND     VALUE 'N'.
       05 WS-REQUEST-EXISTS        PIC X VALUE'N'.
           88 REQUEST-FOUND            VALUE 'Y'.
           88 REQUEST-NOT-FOUND        VALUE 'N'.
       05 WS-USERNAME-EXISTS       PIC X VALUE 'N'.
           88 USER-FOUND               VALUE 'Y'.
           88 USER-NOT-FOUND           VALUE 'N'.



*> Add a generic input field for loops
01 WS-GENERIC-INPUT          PIC X(100).
01 WS-CURRENT-USER PIC X(100) VALUE SPACES.

01 WS-VALIDATION-FIELDS.
       05 WS-PASSWORD-LENGTH PIC 999.
       05 WS-HAS-CAPITAL     PIC X.
       05 WS-HAS-DIGIT       PIC X.
       05 WS-HAS-SPECIAL     PIC X.
       05 WS-SPECIAL-CHARS   PIC X(10) VALUE "!@#$%^&*()".

01 DISPLAY-MSG              PIC X(300) VALUE SPACES.
01 WS-WELCOME-MSG           PIC X(25)  VALUE 'Welcome to InCollege!'.
01 WS-PROMPT-LOGIN          PIC X(28)  VALUE 'Log In'.
01 WS-PROMPT-REGISTER       PIC X(28)  VALUE 'Create New Account'.
01 WS-PROMPT-CHOICE         PIC X(20)  VALUE 'Enter your choice:'.
01 WS-PROMPT-USERNAME       PIC X(28)  VALUE 'Please enter your username:'.
01 WS-PROMPT-PASSWORD       PIC X(28)  VALUE 'Please enter your password:'.
01 WS-SUCCESSFUL-LOGIN-MSG  PIC X(50)  VALUE 'You have successfully logged in.'.
01 WS-FIND-SOMEONE-MSG      PIC X(28)  VALUE '1. Find someone you know'.
01 WS-LEARN-SKILL-MSG       PIC X(28)  VALUE '2. Learn a new skill'.
01 WS-SEARCH-JOB-MSG        PIC X(28)  VALUE '3. Search for a job'.
01 WS-LOG-OUT-MSG           PIC X(28)  VALUE '6. Log out.'.
01 WS-UC-JOB-MSG            PIC X(60)  VALUE 'Job search/internship is under construction.'.
01 WS-UC-FIND-MSG           PIC X(60)  VALUE 'Find someone you know is under construction.'.
01 WS-LEARN-SKILL-HEADER    PIC X(22)  VALUE 'Learn a New Skill:'.
01 WS-SKILL-1               PIC X(10)  VALUE 'Skill 1'.
01 WS-SKILL-2               PIC X(10)  VALUE 'Skill 2'.
01 WS-SKILL-3               PIC X(10)  VALUE 'Skill 3'.
01 WS-SKILL-4               PIC X(10)  VALUE 'Skill 4'.
01 WS-SKILL-5               PIC X(10)  VALUE 'Skill 5'.
01 WS-GO-BACK               PIC X(10)  VALUE 'Go Back'.
01 WS-SKILL-UC-MSG          PIC X(60)  VALUE 'This skill is under construction.'.
01 WS-INVALID-LOGIN-MSG     PIC X(50)  VALUE 'Incorrect username/password, please try again'.
01 WS-MAX-ACCOUNTS-MSG      PIC X(100) VALUE 'All permitted accounts have been created, please come back later'.
01 WS-PASSWORD-TOO-SHORT    PIC X(60)  VALUE 'Password must be at least 8 characters long.'.
01 WS-PASSWORD-TOO-LONG     PIC X(60)  VALUE 'Password must be at most 12 characters long.'.
01 WS-PASSWORD-NO-CAPITAL   PIC X(60)  VALUE 'Password must contain at least one capital letter.'.
01 WS-PASSWORD-NO-DIGIT     PIC X(60)  VALUE 'Password must contain at least one digit.'.
01 WS-PASSWORD-NO-SPECIAL   PIC X(60)  VALUE 'Password must contain at least one special character.'.
01 WS-INVALID-CHOICE        PIC X(60)  VALUE 'Invalid choice. Please try again.'.
01 WS-DUPLICATE-USERNAME-MSG PIC X(100) VALUE 'This username already exists. Please try another.'.

*> PROFILE
01 WS-BLANK-INPUT-MSG       PIC X(60) VALUE 'Input cannot be blank. Please enter a value.'.
01 WS-PROFILE-MENU-VIEW     PIC X(30) VALUE '5. View My Profile'.
01 WS-PROFILE-MENU-EDIT     PIC X(30) VALUE '4. Create/Edit My Profile'.
01 WS-PROFILE-NOTFOUND-MSG  PIC X(60) VALUE 'No profile found. Use "Create/Edit My Profile" first.'.
01 WS-PROFILE-SAVED-MSG     PIC X(60) VALUE 'Profile saved successfully.'.
01 WS-NAME-INVALID-MSG      PIC X(60) VALUE 'Names must be letters only (A-Z).'.
01 WS-GRAD-YEAR-INVALID     PIC X(60) VALUE 'Graduation year must be 1900-2100.'.
01 WS-CREATE-EDIT-PROMPT    PIC X(100) VALUE '--- Create/Edit Profile ---'.
01 WS-ENTER-FIRST           PIC X(40) VALUE 'Enter First Name:'.
01 WS-ENTER-LAST            PIC X(40) VALUE 'Enter Last Name:'.
01 WS-ENTER-UNIV            PIC X(40) VALUE 'Enter University:'.
01 WS-ENTER-MAJOR           PIC X(40) VALUE 'Enter Major:'.
01 WS-ENTER-GY              PIC X(40) VALUE 'Enter Grad Year (YYYY):'.
01 WS-ENTER-ABOUT-ME        PIC X(200) VALUE 'Enter About Me (optional, max 200 chars, enter blank line to skip): '.
01 WS-ENTER-EXP             PIC X(200) VALUE 'Add Experience (optional, max 3 entries. Enter DONE to finish): '.
01 WS-ENTER-EDU             PIC X(200) VALUE 'Add Education (optional, max 3 entries. Enter DONE to finish): '.
01 WS-SUCCESSFUL-PROFILE-SAVE  PIC X(100)  VALUE 'Profile saved successfully!'.

01 WS-SEARCH-USER-MSG          PIC X(100) VALUE'Enter the full name of the person you are looking for'.
01 WS-TEMP-FIELD            PIC X(100).
01 WS-VALIDATED-YEAR       PIC 9(4).
*> -----------------

PROCEDURE DIVISION.

0000-MAIN-LOGIC.
       PERFORM 1000-INITIALIZE-PROGRAM.
       PERFORM 2000-SHOW-MENU UNTIL WS-USER-WANT-TO-EXIT.
       PERFORM 9000-TERMINATE-PROGRAM.
       STOP RUN.

1000-INITIALIZE-PROGRAM.
       OPEN INPUT  INPUT-FILE.
       OPEN OUTPUT OUTPUT-FILE.

       OPEN INPUT USER-ACCOUNT-FILE.
       IF WS-USER-FILE-STATUS = "00"
           PERFORM 1100-LOAD-USER-ACCOUNT-TABLE
       ELSE
           CLOSE USER-ACCOUNT-FILE
           OPEN OUTPUT USER-ACCOUNT-FILE
           CLOSE USER-ACCOUNT-FILE
           OPEN I-O USER-ACCOUNT-FILE
       END-IF.

       OPEN INPUT USER-PROFILE-FILE
       IF WS-PROFILE-FILE-STATUS NOT = "00"
           CLOSE USER-PROFILE-FILE
           OPEN OUTPUT USER-PROFILE-FILE
           CLOSE USER-PROFILE-FILE
           OPEN I-O USER-PROFILE-FILE
       ELSE
           CLOSE USER-PROFILE-FILE
           OPEN I-O USER-PROFILE-FILE
       END-IF.
*> -----------------

1100-LOAD-USER-ACCOUNT-TABLE.
       MOVE 0 TO WS-USER-ACCOUNT-COUNT
       SET WS-NOT-EOF-FLAG TO TRUE
       PERFORM UNTIL WS-EOF-FLAG
           READ USER-ACCOUNT-FILE
               AT END
                   SET WS-EOF-FLAG TO TRUE
               NOT AT END
                   ADD 1 TO WS-USER-ACCOUNT-COUNT
                   MOVE USER-ACCOUNT-REC
                     TO WS-USER(WS-USER-ACCOUNT-COUNT)
           END-READ
       END-PERFORM.

2000-SHOW-MENU.
       MOVE WS-WELCOME-MSG TO DISPLAY-MSG
       PERFORM 8000-DISPLAY-ROUTINE
       MOVE WS-PROMPT-LOGIN TO DISPLAY-MSG
       PERFORM 8000-DISPLAY-ROUTINE
       MOVE WS-PROMPT-REGISTER TO DISPLAY-MSG
       PERFORM 8000-DISPLAY-ROUTINE
       MOVE WS-PROMPT-CHOICE TO DISPLAY-MSG
       PERFORM 8000-DISPLAY-ROUTINE
       READ INPUT-FILE INTO WS-INPUT-CHOICE
           AT END SET WS-USER-WANT-TO-EXIT TO TRUE
       END-READ

       IF NOT WS-USER-WANT-TO-EXIT
           EVALUATE WS-INPUT-CHOICE
               WHEN "1"
                   PERFORM 3000-LOGIN-ROUTINE
               WHEN "2"
                   PERFORM 4000-CREATE-ACCOUNT-ROUTINE
               WHEN "3"
                   SET WS-USER-WANT-TO-EXIT TO TRUE
               WHEN OTHER
                   MOVE WS-INVALID-CHOICE TO DISPLAY-MSG
                   PERFORM 8000-DISPLAY-ROUTINE
           END-EVALUATE
       END-IF.

3000-LOGIN-ROUTINE.
       SET WS-LOGIN-FAILED TO TRUE
       PERFORM UNTIL WS-LOGIN-SUCCESSFUL
           MOVE WS-PROMPT-USERNAME TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           READ INPUT-FILE INTO WS-INPUT-USERNAME
               AT END SET WS-USER-WANT-TO-EXIT TO TRUE
                    EXIT PERFORM
           END-READ

           MOVE WS-INPUT-USERNAME TO WS-TEMP-FIELD
           PERFORM 1200-ENSURE-NOT-BLANK
           IF DISPLAY-MSG NOT = SPACES
              PERFORM 8000-DISPLAY-ROUTINE
              EXIT PERFORM
           END-IF

           MOVE WS-PROMPT-PASSWORD TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           READ INPUT-FILE INTO WS-INPUT-PASSWORD
               AT END SET WS-USER-WANT-TO-EXIT TO TRUE
                    EXIT PERFORM
           END-READ

           MOVE WS-INPUT-PASSWORD TO WS-TEMP-FIELD
           PERFORM 1200-ENSURE-NOT-BLANK
           IF DISPLAY-MSG NOT = SPACES
              PERFORM 8000-DISPLAY-ROUTINE
              EXIT PERFORM
           END-IF

           PERFORM VARYING IDX FROM 1 BY 1
                   UNTIL IDX > WS-USER-ACCOUNT-COUNT
               IF FUNCTION TRIM(WS-USER-NAME(IDX)) =
                  FUNCTION TRIM(WS-INPUT-USERNAME)
               AND FUNCTION TRIM(WS-USER-PASSWORD(IDX)) =
                  FUNCTION TRIM(WS-INPUT-PASSWORD)
                   SET WS-LOGIN-SUCCESSFUL TO TRUE
                   EXIT PERFORM
               END-IF
           END-PERFORM

           IF WS-LOGIN-SUCCESSFUL
               MOVE WS-SUCCESSFUL-LOGIN-MSG TO DISPLAY-MSG
               PERFORM 8000-DISPLAY-ROUTINE

               STRING "Welcome, "
                      FUNCTION TRIM(WS-INPUT-USERNAME)
                      DELIMITED BY SIZE
                      INTO DISPLAY-MSG
               PERFORM 8000-DISPLAY-ROUTINE

               MOVE WS-INPUT-USERNAME TO WS-CURRENT-USER

               PERFORM 5000-POST-LOGIN-MENU
               SET WS-USER-WANT-TO-EXIT TO TRUE
           ELSE
               MOVE WS-INVALID-LOGIN-MSG TO DISPLAY-MSG
               PERFORM 8000-DISPLAY-ROUTINE
               EXIT PERFORM
           END-IF
       END-PERFORM.

4000-CREATE-ACCOUNT-ROUTINE.
       IF WS-USER-ACCOUNT-COUNT >= 5
           MOVE WS-MAX-ACCOUNTS-MSG TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           EXIT PARAGRAPH
       END-IF

       SET WS-ACCOUNT-NOT-CREATED TO TRUE

       MOVE WS-PROMPT-USERNAME TO DISPLAY-MSG
       PERFORM 8000-DISPLAY-ROUTINE
       READ INPUT-FILE INTO WS-INPUT-USERNAME
           AT END SET WS-USER-WANT-TO-EXIT TO TRUE
                EXIT PARAGRAPH
       END-READ

       *> Ensure No Blank Username
       MOVE WS-INPUT-USERNAME TO WS-TEMP-FIELD
       PERFORM 1200-ENSURE-NOT-BLANK
       IF DISPLAY-MSG NOT = SPACES
          PERFORM 8000-DISPLAY-ROUTINE
          EXIT PARAGRAPH
       END-IF

       *> Check for duplicate username
       PERFORM VARYING IDX FROM 1 BY 1
               UNTIL IDX > WS-USER-ACCOUNT-COUNT
           IF FUNCTION TRIM(WS-USER-NAME(IDX)) =
              FUNCTION TRIM(WS-INPUT-USERNAME)
               MOVE WS-DUPLICATE-USERNAME-MSG TO DISPLAY-MSG
               PERFORM 8000-DISPLAY-ROUTINE
               EXIT PARAGRAPH
           END-IF
       END-PERFORM

       MOVE WS-PROMPT-PASSWORD TO DISPLAY-MSG
       PERFORM 8000-DISPLAY-ROUTINE
       READ INPUT-FILE INTO WS-INPUT-PASSWORD
           AT END SET WS-USER-WANT-TO-EXIT TO TRUE
                EXIT PARAGRAPH
       END-READ

       *> Ensure No Blank Password
       MOVE WS-INPUT-PASSWORD TO WS-TEMP-FIELD
       PERFORM 1200-ENSURE-NOT-BLANK
       IF DISPLAY-MSG NOT = SPACES
          PERFORM 8000-DISPLAY-ROUTINE
          EXIT PARAGRAPH
       END-IF

       PERFORM 4100-VALIDATE-PASSWORD

       IF WS-PASSWORD-IS-VALID
           ADD 1 TO WS-USER-ACCOUNT-COUNT
           MOVE WS-INPUT-USERNAME TO
                WS-USER-NAME(WS-USER-ACCOUNT-COUNT)
           MOVE WS-INPUT-PASSWORD TO
                WS-USER-PASSWORD(WS-USER-ACCOUNT-COUNT)

           *> temporarily close I-O mode to append new accounts
           CLOSE USER-ACCOUNT-FILE
           OPEN EXTEND USER-ACCOUNT-FILE

           IF WS-USER-FILE-STATUS = "00"
            OR WS-USER-FILE-STATUS = "05"
               MOVE WS-USER(WS-USER-ACCOUNT-COUNT)
                 TO USER-ACCOUNT-REC
               WRITE USER-ACCOUNT-REC
           ELSE
               DISPLAY "SOMETHING WRONG WITH WRITING RECORDS "
                       WS-USER-FILE-STATUS
               STOP RUN
           END-IF

           *> open back i-o mode for normal reading
           CLOSE USER-ACCOUNT-FILE
           OPEN I-O USER-ACCOUNT-FILE

           MOVE "Account created successfully!"
             TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           SET WS-ACCOUNT-CREATED TO TRUE
       ELSE
           MOVE "Account creation failed, please try again."
             TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
       END-IF.

4100-VALIDATE-PASSWORD.
       SET WS-PASSWORD-IS-VALID TO TRUE
       COMPUTE WS-PASSWORD-LENGTH =
               FUNCTION LENGTH(FUNCTION TRIM(WS-INPUT-PASSWORD))

       IF WS-PASSWORD-LENGTH < 8
           MOVE WS-PASSWORD-TOO-SHORT TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           SET WS-PASSWORD-IS-INVALID TO TRUE
           EXIT PARAGRAPH
       END-IF

       IF WS-PASSWORD-LENGTH > 12
           MOVE WS-PASSWORD-TOO-LONG TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           SET WS-PASSWORD-IS-INVALID TO TRUE
           EXIT PARAGRAPH
       END-IF

       MOVE 'N' TO WS-HAS-CAPITAL WS-HAS-DIGIT WS-HAS-SPECIAL

       PERFORM VARYING IDX FROM 1 BY 1
               UNTIL IDX > WS-PASSWORD-LENGTH
           MOVE WS-INPUT-PASSWORD(IDX:1) TO WS-CUR-CHAR

           IF WS-CUR-CHAR >= 'A' AND WS-CUR-CHAR <= 'Z'
               MOVE 'Y' TO WS-HAS-CAPITAL
           END-IF

           IF WS-CUR-CHAR >= '0' AND WS-CUR-CHAR <= '9'
               MOVE 'Y' TO WS-HAS-DIGIT
           END-IF

           IF WS-CUR-CHAR = "!" OR
              WS-CUR-CHAR = "@" OR
              WS-CUR-CHAR = "#" OR
              WS-CUR-CHAR = "$" OR
              WS-CUR-CHAR = "%" OR
              WS-CUR-CHAR = "^" OR
              WS-CUR-CHAR = "&" OR
              WS-CUR-CHAR = "*" OR
              WS-CUR-CHAR = "(" OR
              WS-CUR-CHAR = ")"
               MOVE "Y" TO WS-HAS-SPECIAL
           END-IF
       END-PERFORM

       IF WS-HAS-CAPITAL = 'N'
           MOVE WS-PASSWORD-NO-CAPITAL TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           SET WS-PASSWORD-IS-INVALID TO TRUE
       END-IF
       IF WS-HAS-DIGIT = 'N'
           MOVE WS-PASSWORD-NO-DIGIT TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           SET WS-PASSWORD-IS-INVALID TO TRUE
       END-IF
       IF WS-HAS-SPECIAL = 'N'
           MOVE WS-PASSWORD-NO-SPECIAL TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           SET WS-PASSWORD-IS-INVALID TO TRUE
       END-IF.

5000-POST-LOGIN-MENU.
       PERFORM UNTIL WS-USER-WANT-TO-EXIT
           MOVE WS-FIND-SOMEONE-MSG TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-LEARN-SKILL-MSG TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-SEARCH-JOB-MSG TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-PROFILE-MENU-EDIT TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-PROFILE-MENU-VIEW TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-LOG-OUT-MSG TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-PROMPT-CHOICE TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE


           READ INPUT-FILE INTO WS-INPUT-CHOICE
               AT END SET WS-USER-WANT-TO-EXIT TO TRUE
                    EXIT PERFORM
           END-READ

           EVALUATE WS-INPUT-CHOICE
               WHEN "1"
                   PERFORM 6300-VIEW-PROFILE-BY-SEARCH
               WHEN "2"
                   PERFORM 5100-LEARN-SKILL-SUBMENU
               WHEN "3"
                   MOVE WS-UC-JOB-MSG TO DISPLAY-MSG
                   PERFORM 8000-DISPLAY-ROUTINE
               WHEN "4"
                   PERFORM 6100-CREATE-EDIT-PROFILE
               WHEN "5"
                   PERFORM 6000-VIEW-MY-PROFILE
               WHEN "6"
                   PERFORM 2000-SHOW-MENU
               WHEN OTHER
                   MOVE WS-INVALID-CHOICE TO DISPLAY-MSG
                   PERFORM 8000-DISPLAY-ROUTINE
           END-EVALUATE
       END-PERFORM.

5100-LEARN-SKILL-SUBMENU.
       PERFORM WITH TEST AFTER UNTIL WS-USER-WANT-TO-EXIT
           MOVE WS-LEARN-SKILL-HEADER TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-SKILL-1 TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-SKILL-2 TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-SKILL-3 TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-SKILL-4 TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-SKILL-5 TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-GO-BACK TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-PROMPT-CHOICE TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE

           READ INPUT-FILE INTO WS-INPUT-CHOICE
               AT END SET WS-USER-WANT-TO-EXIT TO TRUE
                    EXIT PARAGRAPH
           END-READ

           EVALUATE WS-INPUT-CHOICE
               WHEN "1" THRU "5"
                   MOVE WS-SKILL-UC-MSG TO DISPLAY-MSG
                   PERFORM 8000-DISPLAY-ROUTINE
               WHEN "6"
                   EXIT PARAGRAPH
               WHEN OTHER
                   MOVE WS-INVALID-CHOICE TO DISPLAY-MSG
                   PERFORM 8000-DISPLAY-ROUTINE
           END-EVALUATE
       END-PERFORM.

*> NEW
1200-ENSURE-NOT-BLANK.
       IF FUNCTION LENGTH(FUNCTION TRIM(WS-TEMP-FIELD)) = 0
           MOVE WS-BLANK-INPUT-MSG TO DISPLAY-MSG
       ELSE
           MOVE SPACES TO DISPLAY-MSG
       END-IF.

6000-VIEW-MY-PROFILE.
    INITIALIZE USER-PROFILE-REC.
    SET WS-PROFILE-NOT-FOUND TO TRUE.
    *> Rewind file by re-opening at start
    CLOSE USER-PROFILE-FILE.
    OPEN INPUT USER-PROFILE-FILE.

    SET WS-NOT-EOF-FLAG TO TRUE.
    PERFORM UNTIL WS-EOF-FLAG
        READ USER-PROFILE-FILE
            AT END
                SET WS-EOF-FLAG TO TRUE
            NOT AT END
                IF FUNCTION TRIM(UP-USER-NAME) =
                   FUNCTION TRIM(WS-CURRENT-USER)
                    SET WS-PROFILE-FOUND TO TRUE
                    EXIT PERFORM
                END-IF
        END-READ
    END-PERFORM.

    CLOSE USER-PROFILE-FILE.
    OPEN I-O USER-PROFILE-FILE.

    IF WS-PROFILE-FOUND
        *> --- Display the main profile information ---
        MOVE "--- Your Profile ---" TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE

        STRING "Name: " FUNCTION TRIM(UP-FIRST-NAME) " "
               FUNCTION TRIM(UP-LAST-NAME)
            DELIMITED BY SIZE
            INTO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE

        STRING "University: " FUNCTION TRIM(UP-UNIVERSITY)
            DELIMITED BY SIZE
            INTO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE

        STRING "Major: " FUNCTION TRIM(UP-MAJOR)
            DELIMITED BY SIZE
            INTO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE

        STRING "Graduation Year: " UP-GRAD-YEAR
            DELIMITED BY SIZE
            INTO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE

        STRING "About Me: " FUNCTION TRIM(UP-ABOUT-ME)
            DELIMITED BY SIZE
            INTO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE

        *> --- Display the Experience section if it exists ---
        IF UP-NUM-EXP > 0
            MOVE "Experience:" TO DISPLAY-MSG
            PERFORM 8000-DISPLAY-ROUTINE
            PERFORM VARYING I FROM 1 BY 1 UNTIL I > UP-NUM-EXP
                STRING "  Title: " FUNCTION TRIM(UP-EXP-TITLE(I))
                    DELIMITED BY SIZE INTO DISPLAY-MSG
                PERFORM 8000-DISPLAY-ROUTINE

                STRING "  Company: " FUNCTION TRIM(UP-EXP-COMPANY(I))
                    DELIMITED BY SIZE INTO DISPLAY-MSG
                PERFORM 8000-DISPLAY-ROUTINE

                STRING "  Dates: " FUNCTION TRIM(UP-EXP-DATE(I))
                    DELIMITED BY SIZE INTO DISPLAY-MSG
                PERFORM 8000-DISPLAY-ROUTINE

                STRING "  Description: "
                       FUNCTION TRIM(UP-EXP-DESC(I))
                    DELIMITED BY SIZE INTO DISPLAY-MSG
                PERFORM 8000-DISPLAY-ROUTINE
            END-PERFORM
        END-IF

        *> --- Display the Education section if it exists ---
        IF UP-NUM-EDU > 0
            MOVE "Education:" TO DISPLAY-MSG
            PERFORM 8000-DISPLAY-ROUTINE
            PERFORM VARYING I FROM 1 BY 1 UNTIL I > UP-NUM-EDU
                STRING "  Degree: " FUNCTION TRIM(UP-EDU-DEGREE(I))
                    DELIMITED BY SIZE INTO DISPLAY-MSG
                PERFORM 8000-DISPLAY-ROUTINE

                STRING "  University: " FUNCTION TRIM(UP-EDU-UNI(I))
                    DELIMITED BY SIZE INTO DISPLAY-MSG
                PERFORM 8000-DISPLAY-ROUTINE

                STRING "  Years: " FUNCTION TRIM(UP-EDU-YEARS(I))
                    DELIMITED BY SIZE INTO DISPLAY-MSG
                PERFORM 8000-DISPLAY-ROUTINE
            END-PERFORM
        END-IF
    ELSE
        MOVE WS-PROFILE-NOTFOUND-MSG TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE
    END-IF.

6100-CREATE-EDIT-PROFILE.
       MOVE WS-CREATE-EDIT-PROMPT TO DISPLAY-MSG
       PERFORM 8000-DISPLAY-ROUTINE

       PERFORM 6105-GET-REQUIRED-FIELDS
       IF WS-USER-WANT-TO-EXIT
           EXIT PARAGRAPH
       END-IF

       PERFORM 6200-VALIDATE-PROFILE-FIELDS

       PERFORM 6106-GET-ABOUT-ME
       IF WS-USER-WANT-TO-EXIT
           EXIT PARAGRAPH
       END-IF

       PERFORM 6110-GET-OPTIONAL-EXP
       IF WS-USER-WANT-TO-EXIT
           EXIT PARAGRAPH
       END-IF

       PERFORM 6111-GET-OPTIONAL-EDU
       IF WS-USER-WANT-TO-EXIT
           EXIT PARAGRAPH
       END-IF

       PERFORM 6140-TRANSFER-DATA-TO-RECORD.

       PERFORM 6150-SAVE-OR-UPDATE-PROFILE.

6105-GET-REQUIRED-FIELDS.
    MOVE WS-ENTER-FIRST TO DISPLAY-MSG
    PERFORM 6205-GET-VALID-REQUIRED-FIELDS
    IF WS-USER-WANT-TO-EXIT EXIT PARAGRAPH END-IF
    MOVE WS-TEMP-FIELD TO WS-FIRST-NAME

    MOVE WS-ENTER-LAST TO DISPLAY-MSG
    PERFORM 6205-GET-VALID-REQUIRED-FIELDS
    IF WS-USER-WANT-TO-EXIT EXIT PARAGRAPH END-IF
    MOVE WS-TEMP-FIELD TO WS-LAST-NAME

    MOVE WS-ENTER-UNIV TO DISPLAY-MSG
    PERFORM 6205-GET-VALID-REQUIRED-FIELDS
    IF WS-USER-WANT-TO-EXIT EXIT PARAGRAPH END-IF
    MOVE WS-TEMP-FIELD TO WS-UNIVERSITY

    MOVE WS-ENTER-MAJOR TO DISPLAY-MSG
    PERFORM 6205-GET-VALID-REQUIRED-FIELDS
    IF WS-USER-WANT-TO-EXIT EXIT PARAGRAPH END-IF
    MOVE WS-TEMP-FIELD TO WS-MAJOR

    PERFORM 6260-GET-VALID-YEAR.

6106-GET-ABOUT-ME.
    SET WS-INVALID-FIELD TO TRUE.
    PERFORM UNTIL WS-VALID-FIELD
        MOVE WS-ENTER-ABOUT-ME TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE

        READ INPUT-FILE INTO WS-ABOUT-ME
            AT END SET WS-USER-WANT-TO-EXIT TO TRUE EXIT PERFORM
        END-READ

        IF FUNCTION LENGTH(FUNCTION TRIM(WS-ABOUT-ME)) > 200
            MOVE "Input exceeds 200 characters. Please try again." TO DISPLAY-MSG
            PERFORM 8000-DISPLAY-ROUTINE
            SET WS-INVALID-FIELD TO TRUE
        ELSE
            SET WS-VALID-FIELD TO TRUE *> Exit loop
        END-IF
    END-PERFORM.

6110-GET-OPTIONAL-EXP.
    MOVE 0 TO WS-NUM-EXP.
    PERFORM VARYING J FROM 1 BY 1 UNTIL J > 3
        MOVE WS-ENTER-EXP TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE
        READ INPUT-FILE INTO WS-GENERIC-INPUT
            AT END SET WS-USER-WANT-TO-EXIT TO TRUE EXIT PERFORM
        END-READ

        IF FUNCTION TRIM(WS-GENERIC-INPUT) = "DONE"
            EXIT PERFORM
        END-IF

        ADD 1 TO WS-NUM-EXP
        MOVE WS-GENERIC-INPUT TO WS-EXP-TITLE(J)
        STRING 'Experience #' J ' - Title: '
            DELIMITED BY SIZE INTO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE

           STRING "Experience #" J " - Company/Organization:"
                DELIMITED BY SIZE INTO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           READ INPUT-FILE INTO WS-GENERIC-INPUT
               AT END SET WS-USER-WANT-TO-EXIT TO TRUE EXIT PERFORM
           END-READ
           MOVE WS-GENERIC-INPUT TO WS-EXP-COMPANY(J)

           STRING "Experience #" J " - Dates (e.g., Summer 2024):"
                DELIMITED BY SIZE INTO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           READ INPUT-FILE INTO WS-GENERIC-INPUT
               AT END SET WS-USER-WANT-TO-EXIT TO TRUE EXIT PERFORM
           END-READ
           MOVE WS-GENERIC-INPUT TO WS-EXP-DATES(J)

           STRING "Experience #" J " - Description (optional):"
                DELIMITED BY SIZE INTO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           READ INPUT-FILE INTO WS-GENERIC-INPUT
               AT END SET WS-USER-WANT-TO-EXIT TO TRUE EXIT PERFORM
           END-READ
           MOVE WS-GENERIC-INPUT TO WS-EXP-DESCRIPTION(J)
    END-PERFORM.

    PERFORM UNTIL FUNCTION TRIM(WS-GENERIC-INPUT) = "DONE" OR WS-USER-WANT-TO-EXIT
        MOVE WS-ENTER-EXP TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE

        READ INPUT-FILE INTO WS-GENERIC-INPUT
            AT END SET WS-USER-WANT-TO-EXIT TO TRUE EXIT PERFORM
        END-READ

        IF FUNCTION TRIM(WS-GENERIC-INPUT) NOT = "DONE"
            MOVE "Maximum of 3 experience entries reached." TO DISPLAY-MSG
            PERFORM 8000-DISPLAY-ROUTINE
        END-IF
    END-PERFORM.

6111-GET-OPTIONAL-EDU.
       MOVE 0 TO WS-NUM-EDU
       PERFORM VARYING J FROM 1 BY 1 UNTIL J > 3
           MOVE WS-ENTER-EDU TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE

           *> Start reading title
           READ INPUT-FILE INTO WS-GENERIC-INPUT
               AT END SET WS-USER-WANT-TO-EXIT TO TRUE EXIT PERFORM
           END-READ

           IF FUNCTION TRIM(WS-GENERIC-INPUT) = 'DONE'
               MOVE WS-GENERIC-INPUT TO DISPLAY-MSG
               PERFORM 8000-DISPLAY-ROUTINE
               EXIT PERFORM
           END-IF

           ADD 1 TO WS-NUM-EDU

           MOVE WS-GENERIC-INPUT TO WS-EDU-DEGREE(J)
           STRING 'Education #' J ' - Degree: '
                DELIMITED BY SIZE INTO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE

           STRING 'Education #' J ' - University/College:'
                DELIMITED BY SIZE INTO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           READ INPUT-FILE INTO WS-GENERIC-INPUT
               AT END SET WS-USER-WANT-TO-EXIT TO TRUE EXIT PERFORM
           END-READ
           MOVE WS-GENERIC-INPUT TO WS-EDU-UNIVERSITY(J)

           STRING 'Education #' J ' - Years Attended (e.g., 2023-2025):'
                DELIMITED BY SIZE INTO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           READ INPUT-FILE INTO WS-GENERIC-INPUT
               AT END SET WS-USER-WANT-TO-EXIT TO TRUE EXIT PERFORM
           END-READ
           MOVE WS-GENERIC-INPUT TO WS-EDU-YEARS(J)
       END-PERFORM.

    PERFORM UNTIL FUNCTION TRIM(WS-GENERIC-INPUT) = "DONE" OR WS-USER-WANT-TO-EXIT
        MOVE WS-ENTER-EDU TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE

        READ INPUT-FILE INTO WS-GENERIC-INPUT
            AT END SET WS-USER-WANT-TO-EXIT TO TRUE EXIT PERFORM
        END-READ

        IF FUNCTION TRIM(WS-GENERIC-INPUT) NOT = "DONE"
            MOVE "Maximum of 3 education entries reached." TO DISPLAY-MSG
            PERFORM 8000-DISPLAY-ROUTINE
        END-IF
    END-PERFORM.
6140-TRANSFER-DATA-TO-RECORD.
    MOVE WS-FIRST-NAME      TO WS-FIRST-NAME OF WS-USER-PROFILE-REC.
    MOVE WS-LAST-NAME       TO WS-LAST-NAME OF WS-USER-PROFILE-REC.
    MOVE WS-UNIVERSITY      TO WS-UNIVERSITY OF WS-USER-PROFILE-REC.
    MOVE WS-MAJOR           TO WS-MAJOR OF WS-USER-PROFILE-REC.
    MOVE WS-GRAD-YEAR       TO WS-GRAD-YEAR OF WS-USER-PROFILE-REC.
    MOVE WS-ABOUT-ME        TO WS-ABOUT-ME OF WS-USER-PROFILE-REC.

6150-SAVE-OR-UPDATE-PROFILE.
    MOVE WS-CURRENT-USER TO WS-PROFILE-USERNAME OF WS-USER-PROFILE-REC.
    SET WS-PROFILE-NOT-FOUND TO TRUE.

    OPEN INPUT  USER-PROFILE-FILE.
    OPEN OUTPUT TEMP-PROFILE-FILE.

    *> --- Step 1: Read the original file and write to the temp file ---
    SET WS-NOT-EOF-FLAG TO TRUE.
    PERFORM UNTIL WS-EOF-FLAG
        READ USER-PROFILE-FILE
            AT END
                SET WS-EOF-FLAG TO TRUE
            NOT AT END
                IF FUNCTION TRIM(UP-USER-NAME) = FUNCTION TRIM(WS-CURRENT-USER)
                    WRITE TEMP-PROFILE-REC FROM WS-USER-PROFILE-REC
                    SET WS-PROFILE-FOUND TO TRUE
                ELSE
                    *> This is a different user. Copy their OLD
                    *> record directly to the temp file.
                    WRITE TEMP-PROFILE-REC FROM USER-PROFILE-REC
                END-IF
    END-PERFORM.

    *> --- Step 2: If the user was not found, it's a new profile ---
    IF WS-PROFILE-NOT-FOUND
        *> Append the new record from Working-Storage to the temp file.
        WRITE TEMP-PROFILE-REC FROM WS-USER-PROFILE-REC
    END-IF.

    CLOSE USER-PROFILE-FILE, TEMP-PROFILE-FILE.

    *> --- Step 3: Copy the corrected temp file back to the original ---
    OPEN INPUT  TEMP-PROFILE-FILE.
    OPEN OUTPUT USER-PROFILE-FILE.
    MOVE 'N' TO WS-END-OF-FILE.
    PERFORM UNTIL WS-EOF-FLAG
        READ TEMP-PROFILE-FILE INTO USER-PROFILE-REC
            AT END
                SET WS-EOF-FLAG TO TRUE
            NOT AT END
                WRITE USER-PROFILE-REC
       END-READ
    END-PERFORM.

    CLOSE TEMP-PROFILE-FILE, USER-PROFILE-FILE.

    *> Re-open for future use in the program
    OPEN I-O USER-PROFILE-FILE.
    MOVE WS-SUCCESSFUL-PROFILE-SAVE TO DISPLAY-MSG.
    PERFORM 8000-DISPLAY-ROUTINE.

6200-VALIDATE-PROFILE-FIELDS.
       *> First name alphabet-only
       MOVE WS-FIRST-NAME TO WS-TEMP-FIELD
       PERFORM 6210-ALPHA-ONLY
       IF DISPLAY-MSG NOT = SPACES
           MOVE WS-NAME-INVALID-MSG TO DISPLAY-MSG
           EXIT PARAGRAPH
       END-IF

       *> Last name alphabet-only
       MOVE WS-LAST-NAME TO WS-TEMP-FIELD
       PERFORM 6210-ALPHA-ONLY
       IF DISPLAY-MSG NOT = SPACES
           MOVE WS-NAME-INVALID-MSG TO DISPLAY-MSG
           EXIT PARAGRAPH
       END-IF

       *> Grad year 1900..2100
      *> IF WS-GRAD-YEAR < 1900 OR WS-GRAD-YEAR > 2100
      *>     MOVE WS-GRAD-YEAR-INVALID TO DISPLAY-MSG
      *>     EXIT PARAGRAPH
      *> END-IF

       MOVE SPACES TO DISPLAY-MSG.

6205-GET-VALID-REQUIRED-FIELDS.
      MOVE SPACES TO WS-TEMP-FIELD.
      PERFORM UNTIL FUNCTION LENGTH(FUNCTION TRIM(WS-TEMP-FIELD)) > 0
          PERFORM 8000-DISPLAY-ROUTINE
          READ INPUT-FILE INTO WS-TEMP-FIELD
                AT END SET WS-USER-WANT-TO-EXIT TO TRUE
                        EXIT PERFORM

          END-READ

          IF FUNCTION LENGTH(FUNCTION TRIM(WS-TEMP-FIELD)) = 0
               MOVE WS-BLANK-INPUT-MSG TO DISPLAY-MSG
               PERFORM 8000-DISPLAY-ROUTINE
               MOVE WS-ENTER-FIRST TO DISPLAY-MSG
          END-IF
      END-PERFORM.

6210-ALPHA-ONLY.
       MOVE SPACES TO DISPLAY-MSG
       COMPUTE I = 1
       PERFORM UNTIL I > FUNCTION LENGTH(FUNCTION TRIM(WS-TEMP-FIELD))
           MOVE WS-TEMP-FIELD(I:1) TO WS-CUR-CHAR
           IF (WS-CUR-CHAR < 'A' OR WS-CUR-CHAR > 'Z')
              AND (WS-CUR-CHAR < 'a' OR WS-CUR-CHAR > 'z')
              MOVE 'X' TO DISPLAY-MSG(1:1)
              EXIT PERFORM
           END-IF
           ADD 1 TO I
       END-PERFORM
       IF DISPLAY-MSG(1:1) = 'X'
           MOVE 'INVALID' TO DISPLAY-MSG
       ELSE
           MOVE SPACES TO DISPLAY-MSG
       END-IF.

 6260-GET-VALID-YEAR.
    SET WS-INVALID-FIELD TO TRUE
    PERFORM UNTIL WS-VALID-FIELD
        MOVE WS-ENTER-GY TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE

        READ INPUT-FILE INTO WS-TEMP-FIELD
            AT END
                SET WS-USER-WANT-TO-EXIT TO TRUE
                EXIT PERFORM
        END-READ

        IF NOT WS-USER-WANT-TO-EXIT
            *> First, check if the input is numeric at all
            IF FUNCTION TRIM(WS-TEMP-FIELD) IS NUMERIC

                *> If it's numeric, convert it to a number
                MOVE FUNCTION NUMVAL(FUNCTION TRIM(WS-TEMP-FIELD))
                  TO WS-VALIDATED-YEAR

                *> Now, check if the number is in range
                IF WS-VALIDATED-YEAR >= 1900 AND WS-VALIDATED-YEAR <= 2100
                    MOVE WS-VALIDATED-YEAR TO WS-GRAD-YEAR
                    SET WS-VALID-FIELD TO TRUE *> Success!
                ELSE
                    *> It's a number, but out of range
                    MOVE WS-GRAD-YEAR-INVALID TO DISPLAY-MSG
                    PERFORM 8000-DISPLAY-ROUTINE
                END-IF
            ELSE
                *> It's not a number (e.g., "abcd")
                MOVE "Year must be a 4-digit number." TO DISPLAY-MSG
                PERFORM 8000-DISPLAY-ROUTINE
            END-IF
        END-IF
    END-PERFORM.



6300-VIEW-PROFILE-BY-SEARCH.
       MOVE "Enter Full name of user to search for their account." TO DISPLAY-MSG.
       PERFORM 8000-DISPLAY-ROUTINE
       MOVE "Enter First name to search:" TO DISPLAY-MSG.
       PERFORM 8000-DISPLAY-ROUTINE.
       MOVE "Enter last name to search:" TO DISPLAY-MSG.
       PERFORM 8000-DISPLAY-ROUTINE.

       SET WS-NOT-EOF-FLAG TO TRUE.
       SET WS-PROFILE-NOT-FOUND TO TRUE.

       CLOSE USER-PROFILE-FILE.
       OPEN INPUT USER-PROFILE-FILE.

      READ INPUT-FILE INTO WS-SEARCH-FIRST-NAME
           AT END SET WS-USER-WANT-TO-EXIT TO TRUE
           NOT AT END MOVE FUNCTION TRIM(WS-SEARCH-FIRST-NAME) TO WS-SEARCH-FIRST-NAME
      END-READ

      IF NOT WS-USER-WANT-TO-EXIT
           READ INPUT-FILE INTO WS-SEARCH-LAST-NAME
               AT END SET WS-USER-WANT-TO-EXIT TO TRUE
               NOT AT END MOVE FUNCTION TRIM(WS-SEARCH-LAST-NAME) TO WS-SEARCH-LAST-NAME
           END-READ
      END-IF


       PERFORM UNTIL WS-EOF-FLAG OR WS-PROFILE-FOUND
           READ USER-PROFILE-FILE
               AT END
                   SET WS-EOF-FLAG TO TRUE
               NOT AT END
                   IF FUNCTION TRIM(UP-FIRST-NAME) = FUNCTION TRIM(WS-SEARCH-FIRST-NAME) AND FUNCTION TRIM(UP-LAST-NAME) = FUNCTION TRIM(WS-SEARCH-LAST-NAME)
                       SET WS-PROFILE-FOUND TO TRUE
                       EXIT PERFORM
                   END-IF
           END-READ
       END-PERFORM

    CLOSE USER-PROFILE-FILE.
    OPEN I-O USER-PROFILE-FILE.

    IF WS-PROFILE-FOUND
        *> --- Display the main profile information ---
        MOVE "--- User Profile ---" TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE

        STRING "Name: " FUNCTION TRIM(UP-FIRST-NAME) " "
               FUNCTION TRIM(UP-LAST-NAME)
            DELIMITED BY SIZE
            INTO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE

        STRING "University: " FUNCTION TRIM(UP-UNIVERSITY)
            DELIMITED BY SIZE
            INTO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE

        STRING "Major: " FUNCTION TRIM(UP-MAJOR)
            DELIMITED BY SIZE
            INTO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE

        STRING "Graduation Year: " UP-GRAD-YEAR
            DELIMITED BY SIZE
            INTO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE

        STRING "About Me: " FUNCTION TRIM(UP-ABOUT-ME)
            DELIMITED BY SIZE
            INTO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE

        *> --- Display the Experience section if it exists ---
        IF UP-NUM-EXP > 0
            MOVE "Experience:" TO DISPLAY-MSG
            PERFORM 8000-DISPLAY-ROUTINE
            PERFORM VARYING I FROM 1 BY 1 UNTIL I > UP-NUM-EXP
                STRING "  Title: " FUNCTION TRIM(UP-EXP-TITLE(I))
                    DELIMITED BY SIZE INTO DISPLAY-MSG
                PERFORM 8000-DISPLAY-ROUTINE

                STRING "  Company: " FUNCTION TRIM(UP-EXP-COMPANY(I))
                    DELIMITED BY SIZE INTO DISPLAY-MSG
                PERFORM 8000-DISPLAY-ROUTINE

                STRING "  Dates: " FUNCTION TRIM(UP-EXP-DATE(I))
                    DELIMITED BY SIZE INTO DISPLAY-MSG
                PERFORM 8000-DISPLAY-ROUTINE

                STRING "  Description: "
                       FUNCTION TRIM(UP-EXP-DESC(I))
                    DELIMITED BY SIZE INTO DISPLAY-MSG
                PERFORM 8000-DISPLAY-ROUTINE
            END-PERFORM
        END-IF

        *> --- Display the Education section if it exists ---
        IF UP-NUM-EDU > 0
            MOVE "Education:" TO DISPLAY-MSG
            PERFORM 8000-DISPLAY-ROUTINE
            PERFORM VARYING I FROM 1 BY 1 UNTIL I > UP-NUM-EDU
                STRING "  Degree: " FUNCTION TRIM(UP-EDU-DEGREE(I))
                    DELIMITED BY SIZE INTO DISPLAY-MSG
                PERFORM 8000-DISPLAY-ROUTINE

                STRING "  University: " FUNCTION TRIM(UP-EDU-UNI(I))
                    DELIMITED BY SIZE INTO DISPLAY-MSG
                PERFORM 8000-DISPLAY-ROUTINE

                STRING "  Years: " FUNCTION TRIM(UP-EDU-YEARS(I))
                    DELIMITED BY SIZE INTO DISPLAY-MSG
                PERFORM 8000-DISPLAY-ROUTINE
            END-PERFORM
        END-IF
    ELSE
        MOVE WS-PROFILE-NOTFOUND-MSG TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE
        EXIT PARAGRAPH 
    END-IF.
    MOVE "Do you want to send a connection request to this user? If yes enter Y if no enter N." TO DISPLAY-MSG
    PERFORM 8000-DISPLAY-ROUTINE

       READ INPUT-FILE INTO WS-INPUT-CHOICE
           AT END
            CONTINUE
           NOT AT END
               MOVE FUNCTION TRIM(WS-INPUT-CHOICE) TO WS-INPUT-CHOICE

                IF WS-INPUT-CHOICE = 'Y' OR WS-INPUT-CHOICE = 'y'
                   MOVE FUNCTION TRIM(UP-USER-NAME) TO WS-TO-CONNECTION-USERNAME
                   PERFORM 6400-SEND-CONNECTION-REQUEST
               ELSE
                   MOVE "Connection request denied. Back to menu" TO DISPLAY-MSG
                   PERFORM 8000-DISPLAY-ROUTINE
                END-IF
       END-READ.




6400-SEND-CONNECTION-REQUEST.


       PERFORM 6405-CHECK-USER-EXISTS

       IF USER-NOT-FOUND
           MOVE "Username was not found." TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           GO TO SEND-CONNECTION-REQUEST-END
       END-IF

       PERFORM 6410-CHECK-EXISTING-CONNECTION



       IF CONNECTION-FOUND
               MOVE "You are already connected to this user." TO DISPLAY-MSG
               PERFORM 8000-DISPLAY-ROUTINE
               GO TO SEND-CONNECTION-REQUEST-END
       END-IF

       PERFORM 6415-CHECK-PENDING-REQUEST

       IF REQUEST-FOUND
           MOVE "You already sent a request to this user." TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           GO TO SEND-CONNECTION-REQUEST-END
       END-IF

       PERFORM 6420-SAVE-CONNECTION-REQUEST

       STRING "Connection request successfully sent to " FUNCTION TRIM(WS-TO-CONNECTION-USERNAME)
           DELIMITED BY SIZE INTO DISPLAY-MSG
       PERFORM 8000-DISPLAY-ROUTINE.

SEND-CONNECTION-REQUEST-END.
           MOVE "Connection request processing" TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE.


6405-CHECK-USER-EXISTS.
       SET USER-NOT-FOUND TO TRUE
       OPEN INPUT USER-PROFILE-FILE
       SET WS-NOT-EOF-FLAG TO TRUE

       PERFORM UNTIL WS-EOF-FLAG OR USER-FOUND
           READ USER-PROFILE-FILE
               AT END
                   SET WS-EOF-FLAG TO TRUE
               NOT AT END
                   IF FUNCTION TRIM(UP-USER-NAME) = FUNCTION TRIM(WS-TO-CONNECTION-USERNAME)
                       SET USER-FOUND TO TRUE
                   END-IF
           END-READ
       END-PERFORM

       SET WS-NOT-EOF-FLAG TO TRUE
       CLOSE USER-PROFILE-FILE.

6410-CHECK-EXISTING-CONNECTION.
    SET CONNECTION-NOT-FOUND TO TRUE

    OPEN INPUT CONNECTION-FILE
    SET WS-NOT-EOF-FLAG TO TRUE


    PERFORM UNTIL WS-EOF-FLAG OR CONNECTION-FOUND
        READ CONNECTION-FILE
            AT END
                SET WS-EOF-FLAG TO TRUE
            NOT AT END

                IF (FUNCTION TRIM(CONNECTION-USER1) = FUNCTION TRIM(WS-INPUT-USERNAME)
                    AND FUNCTION TRIM(CONNECTION-USER2) = FUNCTION TRIM(WS-TO-CONNECTION-USERNAME))
                   OR (FUNCTION TRIM(CONNECTION-USER1) = FUNCTION TRIM(WS-TO-CONNECTION-USERNAME)
                    AND FUNCTION TRIM(CONNECTION-USER2) = FUNCTION TRIM(WS-INPUT-USERNAME))
                    SET CONNECTION-FOUND TO TRUE
                END-IF
        END-READ
    END-PERFORM

    CLOSE CONNECTION-FILE
    SET WS-NOT-EOF-FLAG TO TRUE.

6415-CHECK-PENDING-REQUEST.
           SET REQUEST-NOT-FOUND TO TRUE

           OPEN INPUT PENDING-REQUEST-FILE
           SET WS-NOT-EOF-FLAG TO TRUE

           PERFORM UNTIL WS-EOF-FLAG OR REQUEST-FOUND
               READ PENDING-REQUEST-FILE
                   AT END
                       SET WS-EOF-FLAG TO TRUE
                   NOT AT END
                       IF (FUNCTION TRIM (PEND-SENDING-USER) = FUNCTION TRIM(WS-INPUT-USERNAME) AND FUNCTION TRIM (PEND-RECEIVING-USER) = FUNCTION TRIM(WS-TO-CONNECTION-USERNAME)) OR (FUNCTION TRIM(PEND-SENDING-USER) = FUNCTION TRIM(WS-TO-CONNECTION-USERNAME) AND FUNCTION TRIM(PEND-RECEIVING-USER) = FUNCTION TRIM(WS-INPUT-USERNAME))
                           SET REQUEST-FOUND TO TRUE
                       END-IF
               END-READ
           END-PERFORM

           CLOSE PENDING-REQUEST-FILE
           SET WS-NOT-EOF-FLAG TO TRUE.

6420-SAVE-CONNECTION-REQUEST.
       OPEN EXTEND PENDING-REQUEST-FILE

       MOVE FUNCTION TRIM(WS-INPUT-USERNAME) TO PEND-SENDING-USER
       MOVE FUNCTION TRIM(WS-TO-CONNECTION-USERNAME) TO PEND-RECEIVING-USER

       WRITE PENDING-REQUEST-REC
       CLOSE PENDING-REQUEST-FILE.







8000-DISPLAY-ROUTINE.
       DISPLAY DISPLAY-MSG
       MOVE DISPLAY-MSG TO OUTPUT-RECORD
       WRITE OUTPUT-RECORD
       MOVE SPACES TO DISPLAY-MSG.

9000-TERMINATE-PROGRAM.
       CLOSE INPUT-FILE
       CLOSE OUTPUT-FILE
       CLOSE USER-ACCOUNT-FILE
       CLOSE USER-PROFILE-FILE
       EXIT.

