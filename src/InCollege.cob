IDENTIFICATION DIVISION.
PROGRAM-ID. INCOLLEGE.

ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
       SELECT INPUT-FILE ASSIGN TO "InCollege-Input.txt"
           organization is line sequential.
       SELECT OUTPUT-FILE ASSIGN TO "InCollege-Output.txt"
           organization is line sequential.
       SELECT USER-ACCOUNT-FILE ASSIGN TO "USER-ACCOUNT.DAT"
           organization is sequential
           FILE STATUS IS WS-USER-FILE-STATUS.
       SELECT USER-PROFILE-FILE ASSIGN TO "USER-PROFILE.DAT"
           organization is sequential
           FILE STATUS IS WS-PROFILE-FILE-STATUS.
       *> CHANGE: Added a temporary file for updating profiles
       SELECT TEMP-PROFILE-FILE ASSIGN TO "TEMP-PROFILE.DAT"
           organization is sequential
           ACCESS MODE IS SEQUENTIAL
           FILE STATUS IS WS-TEMP-PROFILE-STATUS.

DATA DIVISION.
FILE SECTION.
FD INPUT-FILE.
01 INPUT-RECORD PIC X(100).

FD OUTPUT-FILE.
01 OUTPUT-RECORD PIC X(100).

FD USER-ACCOUNT-FILE.
01 USER-ACCOUNT-REC.
       05 USER-NAME PIC X(100).
       05 USER-PASSWORD PIC X(100).

FD USER-PROFILE-FILE.
01 USER-PROFILE-REC.
    05 PROFILE-USERNAME   PIC X(100).
    05 FIRST-NAME         PIC X(50).
    05 LAST-NAME          PIC X(50).
    05 UNIVERSITY-ATTENDED PIC X(100).
    05 MAJOR              PIC X(50).
    05 GRADUATION-YEAR    PIC 9(4).
    05 ABOUT-ME           PIC X(200).
    05 NUM-EXP            PIC 9.
    05 EXPERIENCE-TABLE.
       10 EXPERIENCE-ENTRY OCCURS 3 TIMES.
          15 EXP-TITLE        PIC X(50).
          15 EXP-COMPANY      PIC X(50).
          15 EXP-DATES        PIC X(50).
          15 EXP-DESCRIPTION  PIC X(100).
    05 NUM-EDU            PIC 9.
    05 EDUCATION-TABLE.
       10 EDUCATION-ENTRY OCCURS 3 TIMES.
          15 EDU-DEGREE       PIC X(50).
          15 EDU-UNIVERSITY   PIC X(50).
          15 EDU-YEARS        PIC X(50).


FD TEMP-PROFILE-FILE.
01 TEMP-PROFILE-REC         PIC X(1756). *> Size of USER-PROFILE-REC

WORKING-STORAGE SECTION.
01 WS-FLAGS.
       05 WS-END-OF-FILE PIC X VALUE 'N'.
              88 WS-EOF-FLAG VALUE 'Y'.
              88 WS-NOT-EOF-FLAG VALUE 'N'.

       05 WS-LOGIN-FLAG PIC X.
           88 WS-LOGIN-SUCCESSFUL VALUE 'Y'.
           88 WS-LOGIN-FAILED VALUE 'N'.

       05 WS-VALIDATION-FLAG PIC X.
           88 WS-PASSWORD-IS-VALID VALUE 'Y'.
           88 WS-PASSWORD-IS-INVALID VALUE 'N'.

       05 WS-ACCOUNT-CREATED-FLAG PIC X.
           88 WS-ACCOUNT-CREATED VALUE 'Y'.
           88 WS-ACCOUNT-NOT-CREATED VALUE 'N'.

       05 WS-EXIT-STATUS PIC X VALUE 'N'.
              88 WS-USER-WANT-TO-EXIT VALUE 'Y'.

       05 WS-USER-FILE-STATUS PIC XX VALUE "00".
       05 WS-CUR-CHAR PIC X.

       *> profile flags
       05 WS-PROFILE-FILE-STATUS PIC XX VALUE "00".
       05 WS-TEMP-PROFILE-STATUS PIC XX VALUE "00".
       05 WS-PROFILE-FOUND-FLAG PIC X VALUE 'N'.

01 WS-COUNTERS.
       05 WS-USER-ACCOUNT-COUNT PIC 99 VALUE 0.
       05 I PIC 99.

       *> profile counters
       05 J PIC 99.
       05 WS-PROFILE-EXP-COUNT PIC 9.
       05 WS-PROFILE-EDU-COUNT PIC 9.
01 WS-USER-ACCOUNT-TABLE.
       05 WS-USER OCCURS 5 TIMES INDEXED BY IDX.
           10 WS-USER-NAME PIC X(100).
           10 WS-USER-PASSWORD PIC X(100).

01 WS-INPUT-VARIABLES.
       05 WS-INPUT-CHOICE PIC X(1).
       05 WS-INPUT-USERNAME PIC X(100).
       05 WS-INPUT-PASSWORD PIC X(100).

       *> Added a variable to hold generic input for optional fields
       05 WS-GENERIC-INPUT PIC X(100).

01 WS-VALIDATION-FIELDS.
    05 WS-PASSWORD-LENGTH  PIC 999.
    05 WS-HAS-CAPITAL      PIC X.
    05 WS-HAS-DIGIT        PIC X.
    05 WS-HAS-SPECIAL      PIC X.
    05 WS-SPECIAL-CHARS    PIC X(10) VALUE "!@#$%^&*()".

01 WS-USER-PROFILE-REC.
    05 WS-PROFILE-USERNAME     PIC X(100).
    05 WS-FIRST-NAME           PIC X(50).
    05 WS-LAST-NAME            PIC X(50).
    05 WS-UNIVERSITY-ATTENDED  PIC X(100).
    05 WS-MAJOR                PIC X(50).
    05 WS-GRADUATION-YEAR      PIC X(4). *> Read as text for validation
    05 WS-ABOUT-ME             PIC X(200).
    05 WS-NUM-EXP              PIC 9.
    05 WS-EXPERIENCE-TABLE.
       10 WS-EXPERIENCE-ENTRY OCCURS 3 TIMES.
          15 WS-EXP-TITLE           PIC X(50).
          15 WS-EXP-COMPANY         PIC X(50).
          15 WS-EXP-DATES           PIC X(50).
          15 WS-EXP-DESCRIPTION     PIC X(100).
    05 WS-NUM-EDU              PIC 9.
    05 WS-EDUCATION-TABLE.
       10 WS-EDUCATION-ENTRY OCCURS 3 TIMES.
          15 WS-EDU-DEGREE          PIC X(50).
          15 WS-EDU-UNIVERSITY      PIC X(50).
          15 WS-EDU-YEARS           PIC X(50).

01 DISPLAY-MSG PIC X(100) VALUE SPACES.
01 WS-WELCOME-MSG PIC X(25) VALUE 'Welcome to InCollege!'.
01 WS-PROMPT-LOGIN PIC X(28) VALUE 'Log In'.
01 WS-PROMPT-REGISTER PIC X(28) VALUE 'Create New Account'.
01 WS-PROMPT-CHOICE PIC X(20) VALUE 'Enter your choice:'.
01 WS-PROMPT-USERNAME PIC X(28) VALUE 'Please enter your username:'.
01 WS-PROMPT-PASSWORD PIC X(28) VALUE 'Please enter your password:'.
01 WS-SUCCESSFUL-LOGIN-MSG PIC X(50) VALUE 'You have successfully logged in.'.
01 WS-FIND-SOMEONE-MSG PIC X(28) VALUE 'Find someone you know'.
01 WS-LEARN-SKILL-MSG PIC X(28) VALUE 'Learn a new skill'.
01 WS-SEARCH-JOB-MSG PIC X(28) VALUE 'Search for a job'.
01 WS-UC-JOB-MSG PIC X(60) VALUE 'Job search/internship is under construction.'.
01 WS-UC-FIND-MSG PIC X(60) VALUE 'Find someone you know is under construction.'.
01 WS-LEARN-SKILL-HEADER PIC X(22) VALUE 'Learn a New Skill:'.
01 WS-SKILL-1 PIC X(10) VALUE 'Skill 1'.
01 WS-SKILL-2 PIC X(10) VALUE 'Skill 2'.
01 WS-SKILL-3 PIC X(10) VALUE 'Skill 3'.
01 WS-SKILL-4 PIC X(10) VALUE 'Skill 4'.
01 WS-SKILL-5 PIC X(10) VALUE 'Skill 5'.
01 WS-GO-BACK PIC X(10) VALUE 'Go Back'.
01 WS-SKILL-UC-MSG PIC X(60) VALUE 'This skill is under construction.'.
01 WS-INVALID-LOGIN-MSG PIC X(50) VALUE 'Incorrect username/password, please try again'.
01 WS-MAX-ACCOUNTS-MSG PIC X(100) VALUE 'All permitted accounts have been created, please come back later'.
01 WS-PASSWORD-TOO-SHORT PIC X(60) VALUE 'Password must be at least 8 characters long.'.
01 WS-PASSWORD-TOO-LONG PIC X(60) VALUE 'Password must be at most 12 characters long.'.
01 WS-PASSWORD-NO-CAPITAL PIC X(60) VALUE 'Password must contain at least one capital letter.'.
01 WS-PASSWORD-NO-DIGIT PIC X(60) VALUE 'Password must contain at least one digit.'.
01 WS-PASSWORD-NO-SPECIAL PIC X(60) VALUE 'Password must contain at least one special character.'.
01 WS-INVALID-CHOICE PIC X(60) VALUE 'Invalid choice. Please try again.'.
01 WS-DUPLICATE-USERNAME-MSG PIC X(100) VALUE 'This username already exists. Please try another.'.

*> profile prompts
01 WS-CREATE-EDIT-PROFILE-MENU PIC X(30)
    VALUE '1. Create/Edit My Profile'.
01 WS-VIEW-PROFILE-MENU PIC X(30) VALUE '2. View My Profile'.
01 WS-SEARCH-USER-MENU PIC X(30) VALUE '3. Search for a User'.
01 WS-LEARN-SKILL-MENU PIC X(30) VALUE '4. Learn a New Skill'.
01 WS-LOGOUT-MENU PIC X(30) VALUE '5. Log Out'.
01 WS-PROFILE-MENU-HDR PIC X(50) VALUE '--- Create/Edit Profile ---'.
01 WS-PROFILE-SAVE-MSG PIC X(30) VALUE 'Profile saved successfully!'.
01 WS-NAME-PROMPT PIC X(30) VALUE 'Enter First Name:'.
01 WS-LAST-NAME-PROMPT PIC X(30) VALUE 'Enter Last Name:'.
01 WS-UNIV-PROMPT PIC X(100)
    VALUE 'Enter University/College Attended:'.
01 WS-MAJOR-PROMPT PIC X(30) VALUE 'Enter Major:'.
01 WS-GRAD-PROMPT PIC X(30) VALUE 'Enter Graduation Year (YYYY):'.
01 WS-ABOUT-ME-PROMPT PIC X(80)
    VALUE 'Enter About Me (optional, enter blank line to skip):'.
01 WS-EXPERIENCE-PROMPT PIC X(80)
    VALUE 'Add Experience (optional, enter ''DONE'' to finish):'.
01 WS-EDUCATION-PROMPT PIC X(80)
    VALUE 'Add Education (optional, enter ''DONE'' to finish):'.
01 WS-INVALID-YEAR-MSG PIC X(50)
    VALUE 'Invalid year. Please enter a 4-digit number.'.
01 WS-REQUIRED-FIELD-MSG PIC X(50)
    VALUE 'This field is required. Please enter a value.'.

*> FIXED: Removed the duplicate block of prompt variables
01 WS-DYNAMIC-PROMPTS.
    05 WS-EXP-TITLE-PROMPT       PIC X(50).
    05 WS-EXP-COMPANY-PROMPT     PIC X(50).
    05 WS-EXP-DATES-PROMPT       PIC X(50).
    05 WS-EXP-DESC-PROMPT        PIC X(80).
    05 WS-EDU-DEGREE-PROMPT      PIC X(50).
    05 WS-EDU-UNIV-PROMPT        PIC X(50).
    05 WS-EDU-YEARS-PROMPT       PIC X(50).

PROCEDURE DIVISION.

0000-MAIN-LOGIC.
       PERFORM 1000-INITIALIZE-PROGRAM.
       PERFORM 2000-SHOW-MENU UNTIL WS-USER-WANT-TO-EXIT.
       PERFORM 9000-TERMINATE-PROGRAM.
       STOP RUN.

1000-INITIALIZE-PROGRAM.
       OPEN INPUT INPUT-FILE.
       OPEN OUTPUT OUTPUT-FILE.

       OPEN INPUT USER-ACCOUNT-FILE.

       DISPLAY WS-USER-FILE-STATUS
       IF WS-USER-FILE-STATUS = "00"
           PERFORM 1100-LOAD-USER-ACCOUNT-TABLE
       ELSE
           CLOSE USER-ACCOUNT-FILE
           OPEN OUTPUT USER-ACCOUNT-FILE
           CLOSE USER-ACCOUNT-FILE
           OPEN I-O USER-ACCOUNT-FILE
       END-IF.

       OPEN I-O USER-PROFILE-FILE.
           IF WS-PROFILE-FILE-STATUS = "35" *> "File Not Found"
              CLOSE USER-PROFILE-FILE
              OPEN OUTPUT USER-PROFILE-FILE
              CLOSE USER-PROFILE-FILE
              OPEN I-O USER-PROFILE-FILE
           END-IF.
1100-LOAD-USER-ACCOUNT-TABLE.
       MOVE 0 TO WS-USER-ACCOUNT-COUNT
       SET WS-NOT-EOF-FLAG TO TRUE
       PERFORM UNTIL WS-EOF-FLAG
           READ USER-ACCOUNT-FILE
               AT END
                   SET WS-EOF-FLAG TO TRUE
                NOT AT END
                   ADD 1 TO WS-USER-ACCOUNT-COUNT
                   MOVE USER-ACCOUNT-REC TO WS-USER(WS-USER-ACCOUNT-COUNT)
            END-READ
       END-PERFORM.

1110-CREATE-USER-ACCOUNT-FILE.
       CLOSE USER-ACCOUNT-FILE
       OPEN OUTPUT USER-ACCOUNT-FILE
       IF WS-USER-FILE-STATUS NOT = "00"
           DISPLAY "Failed to create USER-ACCOUNT-FILE."
           STOP RUN
       END-IF
       CLOSE USER-ACCOUNT-FILE
       OPEN I-O USER-ACCOUNT-FILE.

2000-SHOW-MENU.
       MOVE WS-WELCOME-MSG TO DISPLAY-MSG.
       PERFORM 8000-DISPLAY-ROUTINE.
       MOVE WS-PROMPT-LOGIN TO DISPLAY-MSG.
       PERFORM 8000-DISPLAY-ROUTINE.
       MOVE WS-PROMPT-REGISTER TO DISPLAY-MSG.
       PERFORM 8000-DISPLAY-ROUTINE.
       MOVE WS-PROMPT-CHOICE TO DISPLAY-MSG.
       PERFORM 8000-DISPLAY-ROUTINE.
       READ INPUT-FILE INTO WS-INPUT-CHOICE
           AT END SET WS-USER-WANT-TO-EXIT TO TRUE.

       IF NOT WS-USER-WANT-TO-EXIT
           EVALUATE WS-INPUT-CHOICE
               WHEN "1"
                   PERFORM 3000-LOGIN-ROUTINE
               WHEN "2"
                   PERFORM 4000-CREATE-ACCOUNT-ROUTINE
               WHEN "3"
                   SET WS-USER-WANT-TO-EXIT TO TRUE
               WHEN OTHER
                   MOVE WS-INVALID-CHOICE TO DISPLAY-MSG
                   PERFORM 8000-DISPLAY-ROUTINE
           END-EVALUATE
        END-IF.


3000-LOGIN-ROUTINE.
       SET WS-LOGIN-FAILED TO TRUE.

       MOVE WS-PROMPT-USERNAME TO DISPLAY-MSG
       PERFORM 8000-DISPLAY-ROUTINE
       READ INPUT-FILE INTO WS-INPUT-USERNAME
            AT END SET WS-USER-WANT-TO-EXIT TO TRUE EXIT PARAGRAPH
       END-READ

       MOVE WS-PROMPT-PASSWORD TO DISPLAY-MSG
       PERFORM 8000-DISPLAY-ROUTINE
       READ INPUT-FILE INTO WS-INPUT-PASSWORD
            AT END SET WS-USER-WANT-TO-EXIT TO TRUE EXIT PARAGRAPH
       END-READ

       PERFORM VARYING IDX FROM 1 BY 1 UNTIL IDX > WS-USER-ACCOUNT-COUNT
           IF FUNCTION TRIM(WS-USER-NAME(IDX)) =
               FUNCTION TRIM(WS-INPUT-USERNAME) AND
               FUNCTION TRIM(WS-USER-PASSWORD(IDX)) =
               FUNCTION TRIM(WS-INPUT-PASSWORD)
                   SET WS-LOGIN-SUCCESSFUL TO TRUE
                   EXIT PERFORM
           END-IF
       END-PERFORM
       IF WS-LOGIN-SUCCESSFUL
           MOVE WS-SUCCESSFUL-LOGIN-MSG TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE

           STRING "Welcome, "
                   FUNCTION TRIM(WS-INPUT-USERNAME)
                   DELIMITED BY SIZE
                   INTO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE

           PERFORM 5000-POST-LOGIN-MENU
               SET WS-USER-WANT-TO-EXIT TO TRUE
           ELSE
               MOVE WS-INVALID-LOGIN-MSG TO DISPLAY-MSG
               PERFORM 8000-DISPLAY-ROUTINE
               EXIT PARAGRAPH *> Go back to main menu after one failed attempt
       END-IF.


4000-CREATE-ACCOUNT-ROUTINE.
       IF WS-USER-ACCOUNT-COUNT >= 5
        MOVE WS-MAX-ACCOUNTS-MSG TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE
        EXIT PARAGRAPH
       END-IF.

       SET WS-ACCOUNT-NOT-CREATED TO TRUE.

       MOVE WS-PROMPT-USERNAME TO DISPLAY-MSG
       PERFORM 8000-DISPLAY-ROUTINE
       READ INPUT-FILE INTO WS-INPUT-USERNAME
        AT END SET WS-USER-WANT-TO-EXIT TO TRUE EXIT PARAGRAPH
       END-READ

       *> Check for duplicate username
       PERFORM VARYING IDX FROM 1 BY 1 UNTIL IDX > WS-USER-ACCOUNT-COUNT
           IF FUNCTION TRIM(WS-USER-NAME(IDX)) =
              FUNCTION TRIM(WS-INPUT-USERNAME)
               MOVE WS-DUPLICATE-USERNAME-MSG TO DISPLAY-MSG
               PERFORM 8000-DISPLAY-ROUTINE
               EXIT PARAGRAPH
           END-IF
       END-PERFORM
       *> DISPLAY WS-INPUT-USERNAME
       *> MOVE WS-INPUT-USERNAME TO OUTPUT-RECORD
       *> WRITE OUTPUT-RECORD.

       MOVE WS-PROMPT-PASSWORD TO DISPLAY-MSG
       PERFORM 8000-DISPLAY-ROUTINE
       READ INPUT-FILE INTO WS-INPUT-PASSWORD
        AT END SET WS-USER-WANT-TO-EXIT TO TRUE EXIT PARAGRAPH
       END-READ
       *> DISPLAY WS-INPUT-PASSWORD
       *> MOVE WS-INPUT-PASSWORD TO OUTPUT-RECORD
       *> WRITE OUTPUT-RECORD.

       PERFORM 4100-VALIDATE-PASSWORD.

       IF WS-PASSWORD-IS-VALID
        ADD 1 TO WS-USER-ACCOUNT-COUNT
        MOVE WS-INPUT-USERNAME TO WS-USER-NAME(WS-USER-ACCOUNT-COUNT)
        MOVE WS-INPUT-PASSWORD TO WS-USER-PASSWORD(WS-USER-ACCOUNT-COUNT)

       *> temporarily close I-O mode to append new accounts
        CLOSE USER-ACCOUNT-FILE
        OPEN EXTEND USER-ACCOUNT-FILE

        IF WS-USER-FILE-STATUS = "00" OR WS-USER-FILE-STATUS = "05"
           MOVE WS-USER(WS-USER-ACCOUNT-COUNT) TO USER-ACCOUNT-REC
           WRITE USER-ACCOUNT-REC
        ELSE
           DISPLAY "SOMETHING WRONG WITH WRITING RECORDS " WS-USER-FILE-STATUS
           STOP RUN
        END-IF

       *> open back i-o mode for normal reading
        CLOSE USER-ACCOUNT-FILE
        OPEN I-O USER-ACCOUNT-FILE

        MOVE "Account created successfully!" TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE
        SET WS-ACCOUNT-CREATED TO TRUE
       ELSE
        MOVE "Account creation failed, please try again."
            TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE
       END-IF.


4100-VALIDATE-PASSWORD.
       SET WS-PASSWORD-IS-VALID TO TRUE
       COMPUTE WS-PASSWORD-LENGTH = FUNCTION LENGTH(FUNCTION TRIM(WS-INPUT-PASSWORD))

       *> check if password length is fewer than 8
       IF WS-PASSWORD-LENGTH < 8
        MOVE WS-PASSWORD-TOO-SHORT TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE
        SET WS-PASSWORD-IS-INVALID TO TRUE
        EXIT PARAGRAPH
       END-IF.

       *> check if password length is greater than 12
       IF WS-PASSWORD-LENGTH > 12
        MOVE WS-PASSWORD-TOO-LONG TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE
        SET WS-PASSWORD-IS-INVALID TO TRUE
        EXIT PARAGRAPH
       END-IF.

       MOVE 'N' TO WS-HAS-CAPITAL WS-HAS-DIGIT WS-HAS-SPECIAL.

       PERFORM VARYING IDX FROM 1 BY 1 UNTIL IDX > WS-PASSWORD-LENGTH
           MOVE WS-INPUT-PASSWORD(IDX:1) TO WS-CUR-CHAR

           IF WS-CUR-CHAR >= 'A' AND WS-CUR-CHAR <= 'Z'
               MOVE 'Y' TO WS-HAS-CAPITAL
           END-IF

           IF WS-CUR-CHAR >= '0' AND WS-CUR-CHAR <= '9'
               MOVE 'Y' TO WS-HAS-DIGIT
           END-IF

           IF WS-CUR-CHAR = "!" OR
              WS-CUR-CHAR = "@" OR
              WS-CUR-CHAR = "#" OR
              WS-CUR-CHAR = "$" OR
              WS-CUR-CHAR = "%" OR
              WS-CUR-CHAR = "^" OR
              WS-CUR-CHAR = "&" OR
              WS-CUR-CHAR = "*" OR
              WS-CUR-CHAR = "(" OR
              WS-CUR-CHAR = ")"
               MOVE "Y" TO WS-HAS-SPECIAL
           END-IF
       END-PERFORM

       IF WS-HAS-CAPITAL = 'N'
        MOVE WS-PASSWORD-NO-CAPITAL TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE
        SET WS-PASSWORD-IS-INVALID TO TRUE
       END-IF.
       IF WS-HAS-DIGIT = 'N'
        MOVE WS-PASSWORD-NO-DIGIT TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE
        SET WS-PASSWORD-IS-INVALID TO TRUE
       END-IF.
       IF WS-HAS-SPECIAL = 'N'
        MOVE WS-PASSWORD-NO-SPECIAL TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE
        SET WS-PASSWORD-IS-INVALID TO TRUE
       END-IF.

5000-POST-LOGIN-MENU.
       PERFORM UNTIL WS-INPUT-CHOICE = '5'
           MOVE WS-CREATE-EDIT-PROFILE-MENU TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-VIEW-PROFILE-MENU TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-SEARCH-JOB-MSG TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-FIND-SOMEONE-MSG TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-LEARN-SKILL-MSG TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-PROMPT-CHOICE TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE

           READ INPUT-FILE INTO WS-INPUT-CHOICE
               AT END MOVE '5' TO WS-INPUT-CHOICE
           END-READ

           EVALUATE WS-INPUT-CHOICE
               WHEN "1"
                   PERFORM 6000-CREATE-EDIT-PROFILE
               WHEN "2"
                   PERFORM 6100-VIEW-PROFILE
      *> temporarily comment out for epic 2
      *>         WHEN "3"
      *>             MOVE WS-UC-JOB-MSG TO DISPLAY-MSG
      *>             PERFORM 8000-DISPLAY-ROUTINE
               WHEN "3"
                   MOVE WS-UC-FIND-MSG TO DISPLAY-MSG
                   PERFORM 8000-DISPLAY-ROUTINE
               WHEN "4"
                   PERFORM 5100-LEARN-SKILL-SUBMENU
               WHEN "5"
                   EXIT PERFORM
               WHEN OTHER
                   MOVE WS-INVALID-CHOICE TO DISPLAY-MSG
                   PERFORM 8000-DISPLAY-ROUTINE
           END-EVALUATE
       END-PERFORM.
       INITIALIZE WS-INPUT-CHOICE. *> Reset for next login

5100-LEARN-SKILL-SUBMENU.
       PERFORM WITH TEST AFTER UNTIL WS-USER-WANT-TO-EXIT
           MOVE WS-LEARN-SKILL-HEADER TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-SKILL-1 TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-SKILL-2 TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-SKILL-3 TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-SKILL-4 TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-SKILL-5 TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-GO-BACK TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE
           MOVE WS-PROMPT-CHOICE TO DISPLAY-MSG
           PERFORM 8000-DISPLAY-ROUTINE

           READ INPUT-FILE INTO WS-INPUT-CHOICE
               AT END SET WS-USER-WANT-TO-EXIT TO TRUE
                       EXIT PARAGRAPH
           END-READ

           EVALUATE WS-INPUT-CHOICE
               WHEN "1" THRU "5"
                   MOVE WS-SKILL-UC-MSG TO DISPLAY-MSG
                   PERFORM 8000-DISPLAY-ROUTINE
               WHEN "6"
                   EXIT PARAGRAPH
               WHEN OTHER
                   MOVE WS-INVALID-CHOICE TO DISPLAY-MSG
                   PERFORM 8000-DISPLAY-ROUTINE
           END-EVALUATE
       END-PERFORM.

6000-CREATE-EDIT-PROFILE.
       MOVE WS-PROFILE-MENU-HDR TO DISPLAY-MSG.
       PERFORM 8000-DISPLAY-ROUTINE.

       *> Initialize the working-storage record
       INITIALIZE WS-USER-PROFILE-REC.

       *> --- REQUIRED FIELDS ---
       PERFORM 6005-GET-REQUIRED-INPUTS.

       *> --- OPTIONAL FIELDS ---
       MOVE WS-ABOUT-ME-PROMPT TO DISPLAY-MSG.
       PERFORM 8000-DISPLAY-ROUTINE.
       READ INPUT-FILE INTO WS-ABOUT-ME.

       PERFORM 6010-ADD-EXPERIENCE-ENTRIES.
       PERFORM 6020-ADD-EDUCATION-ENTRIES.
       PERFORM 6030-SAVE-PROFILE.

       MOVE WS-PROFILE-SAVE-MSG TO DISPLAY-MSG.
       PERFORM 8000-DISPLAY-ROUTINE.

6005-GET-REQUIRED-INPUTS.
           PERFORM UNTIL WS-FIRST-NAME NOT = SPACES
               MOVE WS-NAME-PROMPT TO DISPLAY-MSG
               PERFORM 8000-DISPLAY-ROUTINE
               READ INPUT-FILE INTO WS-FIRST-NAME
               IF WS-FIRST-NAME = SPACES
                   MOVE WS-REQUIRED-FIELD-MSG TO DISPLAY-MSG
                   PERFORM 8000-DISPLAY-ROUTINE
               END-IF
           END-PERFORM.

           PERFORM UNTIL WS-LAST-NAME NOT = SPACES
               MOVE WS-LAST-NAME-PROMPT TO DISPLAY-MSG
               PERFORM 8000-DISPLAY-ROUTINE
               READ INPUT-FILE INTO WS-LAST-NAME
               IF WS-LAST-NAME = SPACES
                   MOVE WS-REQUIRED-FIELD-MSG TO DISPLAY-MSG
                   PERFORM 8000-DISPLAY-ROUTINE
               END-IF
           END-PERFORM.

           PERFORM UNTIL WS-UNIVERSITY-ATTENDED NOT = SPACES
               MOVE WS-UNIV-PROMPT TO DISPLAY-MSG
               PERFORM 8000-DISPLAY-ROUTINE
               READ INPUT-FILE INTO WS-UNIVERSITY-ATTENDED
               IF WS-UNIVERSITY-ATTENDED = SPACES
                   MOVE WS-REQUIRED-FIELD-MSG TO DISPLAY-MSG
                   PERFORM 8000-DISPLAY-ROUTINE
               END-IF
           END-PERFORM.

           PERFORM UNTIL WS-MAJOR NOT = SPACES
               MOVE WS-MAJOR-PROMPT TO DISPLAY-MSG
               PERFORM 8000-DISPLAY-ROUTINE
               READ INPUT-FILE INTO WS-MAJOR
               IF WS-MAJOR = SPACES
                   MOVE WS-REQUIRED-FIELD-MSG TO DISPLAY-MSG
                   PERFORM 8000-DISPLAY-ROUTINE
               END-IF
           END-PERFORM.

           PERFORM UNTIL WS-GRADUATION-YEAR IS NUMERIC AND
                           FUNCTION LENGTH(FUNCTION TRIM(WS-GRADUATION-YEAR)) = 4
               MOVE WS-GRAD-PROMPT TO DISPLAY-MSG
               PERFORM 8000-DISPLAY-ROUTINE
               READ INPUT-FILE INTO WS-GRADUATION-YEAR
               IF WS-GRADUATION-YEAR IS NOT NUMERIC OR
                  FUNCTION LENGTH(FUNCTION TRIM(WS-GRADUATION-YEAR)) <> 4
                   MOVE WS-INVALID-YEAR-MSG TO DISPLAY-MSG
                   PERFORM 8000-DISPLAY-ROUTINE
               END-IF
           END-PERFORM.

*> CHANGE: Entirely new logic for this paragraph
6010-ADD-EXPERIENCE-ENTRIES.
    MOVE 0 TO WS-NUM-EXP.
    PERFORM VARYING J FROM 1 BY 1 UNTIL J > 3
        MOVE WS-EXPERIENCE-PROMPT TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE
        READ INPUT-FILE INTO WS-GENERIC-INPUT
            AT END EXIT PERFORM
        END-READ

        IF FUNCTION TRIM(WS-GENERIC-INPUT) = "DONE"
            EXIT PERFORM
        END-IF

        ADD 1 TO WS-NUM-EXP
        MOVE WS-GENERIC-INPUT TO WS-EXP-TITLE(J)

        STRING 'Experience #' J ' - Company/Organization:'
            DELIMITED BY SIZE INTO WS-EXP-COMPANY-PROMPT
        MOVE WS-EXP-COMPANY-PROMPT TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE
        READ INPUT-FILE INTO WS-EXP-COMPANY(J)

        STRING 'Experience #' J ' - Dates (e.g., Summer 2024):'
            DELIMITED BY SIZE INTO WS-EXP-DATES-PROMPT
        MOVE WS-EXP-DATES-PROMPT TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE
        READ INPUT-FILE INTO WS-EXP-DATES(J)

        STRING 'Experience #' J ' - Description (optional, blank):'
            DELIMITED BY SIZE INTO WS-EXP-DESC-PROMPT
        MOVE WS-EXP-DESC-PROMPT TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE
        READ INPUT-FILE INTO WS-EXP-DESCRIPTION(J)
    END-PERFORM.

*> CHANGE: Entirely new logic for this paragraph
6020-ADD-EDUCATION-ENTRIES.
    MOVE 0 TO WS-NUM-EDU.
    PERFORM VARYING J FROM 1 BY 1 UNTIL J > 3
        MOVE WS-EDUCATION-PROMPT TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE
        READ INPUT-FILE INTO WS-GENERIC-INPUT
            AT END EXIT PERFORM
        END-READ

        IF FUNCTION TRIM(WS-GENERIC-INPUT) = "DONE"
            EXIT PERFORM
        END-IF

        ADD 1 TO WS-NUM-EDU
        MOVE WS-GENERIC-INPUT TO WS-EDU-DEGREE(J)

        STRING 'Education #' J ' - University/College:'
            DELIMITED BY SIZE INTO WS-EDU-UNIV-PROMPT
        MOVE WS-EDU-UNIV-PROMPT TO DISPLAY-MSG
        PERFORM 8000-DISPLAY-ROUTINE
        READ INPUT-FILE INTO WS-EDU-UNIVERSITY(J)

        STRING 'Education #' J ' - Years Attended (e.g., 2023-25):'
            DELIMITED BY SIZE INTO WS-EDU-YEARS-PROMPT
        MOVE WS-EDU-YEARS-PROMPT TO DISPLAY-MSG

        PERFORM 8000-DISPLAY-ROUTINE
        READ INPUT-FILE INTO WS-EDU-YEARS(J)
    END-PERFORM.

*> CHANGE: Entirely new logic to handle create vs. update
6030-SAVE-PROFILE.
    MOVE FUNCTION TRIM(WS-INPUT-USERNAME) TO WS-PROFILE-USERNAME.
    MOVE WS-USER-PROFILE-REC TO USER-PROFILE-REC.

    OPEN INPUT USER-PROFILE-FILE.
    OPEN OUTPUT TEMP-PROFILE-FILE.
    MOVE 'N' TO WS-END-OF-FILE.

    PERFORM UNTIL WS-EOF-FLAG
        READ USER-PROFILE-FILE
            AT END
                SET WS-EOF-FLAG TO TRUE
            NOT AT END
                IF PROFILE-USERNAME NOT = WS-PROFILE-USERNAME
                    WRITE TEMP-PROFILE-REC FROM USER-PROFILE-REC
                END-IF
        END-READ
    END-PERFORM.

    WRITE TEMP-PROFILE-REC FROM USER-PROFILE-REC.

    CLOSE USER-PROFILE-FILE.
    CLOSE TEMP-PROFILE-FILE.

    OPEN INPUT TEMP-PROFILE-FILE.
    OPEN OUTPUT USER-PROFILE-FILE.
    MOVE 'N' TO WS-END-OF-FILE.

    PERFORM UNTIL WS-EOF-FLAG
        READ TEMP-PROFILE-FILE INTO USER-PROFILE-REC
            AT END
                SET WS-EOF-FLAG TO TRUE
            NOT AT END
                WRITE USER-PROFILE-REC
        END-READ
    END-PERFORM.

    CLOSE TEMP-PROFILE-FILE.
    CLOSE USER-PROFILE-FILE.
    OPEN I-O USER-PROFILE-FILE. *> Reopen for subsequent use

6100-VIEW-PROFILE.
       DISPLAY "TO BE DEVELOPED BY DEVELOPER #1".

8000-DISPLAY-ROUTINE.
       DISPLAY DISPLAY-MSG.
       MOVE DISPLAY-MSG TO OUTPUT-RECORD.
       WRITE OUTPUT-RECORD.
       MOVE SPACES TO DISPLAY-MSG.

9000-TERMINATE-PROGRAM.
    CLOSE INPUT-FILE
    CLOSE OUTPUT-FILE
    CLOSE USER-ACCOUNT-FILE
    CLOSE USER-PROFILE-FILE
    EXIT.
